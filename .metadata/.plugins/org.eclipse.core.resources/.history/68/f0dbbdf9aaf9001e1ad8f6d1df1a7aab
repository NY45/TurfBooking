package com.example.demo.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Model.Booking;
import com.example.demo.Model.Receipt;
import com.example.demo.Model.Turf;
import com.example.demo.Service.AdminTurfService;
import com.example.demo.Service.BookingService;
import com.example.demo.Service.UserService;

@RestController
@RequestMapping("/bookings")
public class BookingController {
	
	@Autowired
	private BookingService bookingService;
	
	
	

	@Autowired
    private UserService receiptService;
	
	@GetMapping("/getbookings")
	public ResponseEntity<List<Booking>> getAllBookings(){
		List<Booking> bookings = bookingService.getAllBookings();
		return new ResponseEntity<>(bookings, HttpStatus.OK);
	}
	
	@PostMapping("/createbookings/{id}")
	public ResponseEntity<Booking> createBooking(@RequestBody Booking booking,@PathVariable Long id){
	
		Booking createBooking = bookingService.createBooking(booking,id);
		return new ResponseEntity<>(createBooking, HttpStatus.CREATED);
	}
	
	@GetMapping("/bookingbyid")
     public ResponseEntity<Booking> getBookingById(@PathVariable Long id){
    	 Booking booking = bookingService.getBookingById(id);
    	 if(booking != null) {
    		 return new ResponseEntity<>(booking, HttpStatus.OK);
    	 }else {
    		 return new ResponseEntity<>(HttpStatus.NOT_FOUND);
    	 }
     }
	
	@PutMapping("/{id}")
	public ResponseEntity<Booking> updateBooking(@PathVariable Long id,@RequestBody Booking booking){
		Booking existingBooking = bookingService.getBookingById(id);
		if(existingBooking != null) {
			booking.setId(id);
			Booking updateBooking = bookingService.updateBooking(booking);
			return new ResponseEntity<>(updateBooking, HttpStatus.OK);
		}else {
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<Void> deleteBooking(@PathVariable Long id ){
		Booking booking = bookingService.getBookingById(id);
		if(booking != null) {
			bookingService.deleteBooking(id);
			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		}else {
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
	}
	
	@GetMapping("/{id}")
    public ResponseEntity<Receipt> getReceiptById(@PathVariable Long id) {
        Receipt receipt = receiptService.getReceiptById(id);
        if (receipt != null) {
            return new ResponseEntity<>(receipt, HttpStatus.OK);
        } else {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }

}
}
